{
    "openapi": "3.0.0",
    "info": {
        "title": "ElisERP API Documentation",
        "description": "This is Swagger for ElisERP API!",
        "contact": {
            "email": "office@iledan.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://dev.elis-erp.ro/",
            "description": "ElisERP API"
        }
    ],
    "paths": {
        "/api/verifyDevice/{id}/{hash}": {
            "get": {
                "tags": [
                    "Login"
                ],
                "description": "Verify a Device",
                "operationId": "verifyDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user that add the device",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash of the user browser id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expire date of the link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "Hash of the link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "authbearer": []
                    }
                ]
            }
        },
        "/api/tasks/": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Returns list of tasks",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "authbearer": []
                    }
                ]
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "Returns a tasks",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "authbearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "authbearer": {
                "type": "http",
                "description": "Authorisation Bearer [Token]",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}